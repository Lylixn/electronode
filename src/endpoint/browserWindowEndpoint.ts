import * as restify from "restify";

import {getAllWindow} from "./browser_window/static/getAllWindow";
import {createWindow} from "./browser_window/static/createWindow";
import {loadUrl} from "./browser_window/dynamic/post/loadUrl";
import {loadFile} from "./browser_window/dynamic/post/loadFile";
import {destroy} from "./browser_window/dynamic/post/destroy";
import {close} from "./browser_window/dynamic/post/close";
import {focus} from "./browser_window/dynamic/post/focus";
import {blur} from "./browser_window/dynamic/post/blur";
import {isDestroyed} from "./browser_window/dynamic/get/isDestroyed";
import {isFocused} from "./browser_window/dynamic/get/isFocused";
import {show} from "./browser_window/dynamic/post/show";
import {showInactive} from "./browser_window/dynamic/post/showInactive";
import {hide} from "./browser_window/dynamic/post/hide";
import {isVisible} from "./browser_window/dynamic/get/isVisible";
import {isModal} from "./browser_window/dynamic/get/isModal";
import {maximize} from "./browser_window/dynamic/post/maximize";
import {unmaximize} from "./browser_window/dynamic/post/unmaximize";
import {isMaximized} from "./browser_window/dynamic/get/isMaximized";
import {minimize} from "./browser_window/dynamic/post/minimize";
import {restore} from "./browser_window/dynamic/post/restore";
import {isMinimized} from "./browser_window/dynamic/get/isMinimized";
import {setFullScreen} from "./browser_window/dynamic/post/setFullScreen";
import {isFullScreen} from "./browser_window/dynamic/get/isFullScreen";
import {setSimpleFullScreen} from "./browser_window/dynamic/post/setSimpleFullScreen";
import {isSimpleFullScreen} from "./browser_window/dynamic/get/isSimpleFullScreen";
import {isNormal} from "./browser_window/dynamic/get/isNormal";
import {setAspectRatio} from "./browser_window/dynamic/post/setAspectRatio";
import {setBackgroundColor} from "./browser_window/dynamic/post/setBackgroundColor";
import {previewFile} from "./browser_window/dynamic/post/previewFile";
import {closeFilePreview} from "./browser_window/dynamic/post/closeFilePreview";
import {setBounds} from "./browser_window/dynamic/post/setBounds";
import {getBounds} from "./browser_window/dynamic/get/getBounds";
import {getBackgroundColor} from "./browser_window/dynamic/get/getBackgroundColor";
import {setContentBounds} from "./browser_window/dynamic/post/setContentBounds";
import {getContentBounds} from "./browser_window/dynamic/get/getContentBounds";
import {getNormalBounds} from "./browser_window/dynamic/get/getNormalBounds";
import {setEnabled} from "./browser_window/dynamic/post/setEnabled";
import {isEnabled} from "./browser_window/dynamic/get/isEnabled";
import {setSize} from "./browser_window/dynamic/post/setSize";
import {getSize} from "./browser_window/dynamic/get/getSize";
import {setContentSize} from "./browser_window/dynamic/post/setContentSize";
import {getContentSize} from "./browser_window/dynamic/get/getContentSize";
import {setMinimumSize} from "./browser_window/dynamic/post/setMinimumSize";
import {getMinimumSize} from "./browser_window/dynamic/get/getMinimumSize";
import {setMaximumSize} from "./browser_window/dynamic/post/setMaximumSize";
import {getMaximumSize} from "./browser_window/dynamic/get/getMaximumSize";
import {setResizable} from "./browser_window/dynamic/post/setResizable";
import {isResizable} from "./browser_window/dynamic/get/isResizable";
import {setMovable} from "./browser_window/dynamic/post/setMovable";
import {isMovable} from "./browser_window/dynamic/get/isMovable";
import {setMinimizable} from "./browser_window/dynamic/post/setMinimizable";
import {isMinimizable} from "./browser_window/dynamic/get/isMinimizable";
import {setMaximizable} from "./browser_window/dynamic/post/setMaximizable";
import {isMaximizable} from "./browser_window/dynamic/get/isMaximizable";
import {setFullScreenable} from "./browser_window/dynamic/post/setFullScreenable";
import {isFullScreenable} from "./browser_window/dynamic/get/isFullScreenable";
import {setAlwaysOnTop} from "./browser_window/dynamic/post/setAlwaysOnTop";
import {isAlwaysOnTop} from "./browser_window/dynamic/get/isAlwaysOnTop";
import {moveAbove} from "./browser_window/dynamic/post/moveAbove";
import {moveTop} from "./browser_window/dynamic/post/moveTop";
import {center} from "./browser_window/dynamic/post/center";
import {setPosition} from "./browser_window/dynamic/post/setPosition";
import {getPosition} from "./browser_window/dynamic/get/getPosition";
import {setTitle} from "./browser_window/dynamic/post/setTitle";
import {getTitle} from "./browser_window/dynamic/get/getTitle";
import {setSheetOffset} from "./browser_window/dynamic/post/setSheetOffset";
import {flashFrame} from "./browser_window/dynamic/post/flashFrame";
import {setSkipTaskbar} from "./browser_window/dynamic/post/setSkipTaskbar";
import {setKiosk} from "./browser_window/dynamic/post/setKiosk";
import {isKiosk} from "./browser_window/dynamic/get/isKiosk";

export class BrowserWindowEndpoint {
    private _server: restify.Server;

    constructor(server: restify.Server) {
        this._server = server;

        console.log("Browser init");

        this.static();
        this.dynamic();
        this.dynamicSet();
        this.dynamicIs();
        this.dynamicGet();
    }

    private static() {
        this._server.get('/api/browser_window/get_all_window', getAllWindow);
        this._server.post('/api/browser_window/create', createWindow);
    }
    private dynamic() {
        this._server.post('/api/browser_window/:id/destroy', destroy);
        this._server.post('/api/browser_window/:id/close', close);
        this._server.post('/api/browser_window/:id/focus', focus);
        this._server.post('/api/browser_window/:id/blur', blur);
        this._server.post('/api/browser_window/:id/show', show);
        this._server.post('/api/browser_window/:id/show_inactive', showInactive);
        this._server.post('/api/browser_window/:id/hide', hide);
        this._server.post('/api/browser_window/:id/maximize', maximize);
        this._server.post('/api/browser_window/:id/unmaximize', unmaximize);
        this._server.post('/api/browser_window/:id/minimize', minimize);
        this._server.post('/api/browser_window/:id/restore', restore);
        this._server.post('/api/browser_window/:id/preview_file', previewFile);
        this._server.post('/api/browser_window/:id/close_file_preview', closeFilePreview);
        this._server.post('/api/browser_window/:id/move_above', moveAbove);
        this._server.post('/api/browser_window/:id/move_top', moveTop);
        this._server.post('/api/browser_window/:id/center', center);
        this._server.post('/api/browser_window/:id/flash_frame', flashFrame);
        // server.post('/api/browser_window/:id/hook_window_message', hookWindowMessage);
        // server.post('/api/browser_window/:id/unhook_window_message', unhookWindowMessage);
        // server.post('/api/browser_window/:id/unhook_all_window_messages', unhookAllWindowMessages);
        // server.post('/api/browser_window/:id/focus_on_web_view', focusOnWebView);
        // server.post('/api/browser_window/:id/blur_web_view', blurWebView);
        // server.post('/api/browser_window/:id/capture_page', capturePage);
        this._server.post('/api/browser_window/:id/load_url', loadUrl);
        this._server.post('/api/browser_window/:id/load_file', loadFile);
        // server.post('/api/browser_window/:id/reload', reload);
        // server.post('/api/browser_window/:id/set_menu', setMenu);
        // server.post('/api/browser_window/:id/remove_menu', removeMenu);
        // server.post('/api/browser_window/:id/show_definition_for_selection', showDefinitionForSelection);
        // server.post('/api/browser_window/:id/select_previous_tab', selectPreviousTab);
        // server.post('/api/browser_window/:id/select_next_tab', selectNextTab);
        // server.post('/api/browser_window/:id/merge_all_windows', mergeAllWindows);
        // server.post('/api/browser_window/:id/move_tab_to_new_window', moveTabToNewWindow);
        // server.post('/api/browser_window/:id/toggle_tab_bar', toggleTabBar);
        // server.post('/api/browser_window/:id/add_tabbed_window', addTabbedWindow);
        // server.post('/api/browser_window/:id/add_browser_view', addBrowserView);
        // server.post('/api/browser_window/:id/remove_browser_view', removeBrowserView);
    }
    private dynamicSet(){
        this._server.post('/api/browser_window/:id/set_full_screen', setFullScreen);
        this._server.post('/api/browser_window/:id/set_simple_full_screen', setSimpleFullScreen);
        this._server.post('/api/browser_window/:id/set_aspect_ratio', setAspectRatio);
        this._server.post('/api/browser_window/:id/set_background_color', setBackgroundColor);
        this._server.post('/api/browser_window/:id/set_bounds', setBounds);
        this._server.post('/api/browser_window/:id/set_content_bounds', setContentBounds);
        this._server.post('/api/browser_window/:id/set_enabled', setEnabled);
        this._server.post('/api/browser_window/:id/set_size', setSize);
        this._server.post('/api/browser_window/:id/set_content_size', setContentSize);
        this._server.post('/api/browser_window/:id/set_minimum_size', setMinimumSize);
        this._server.post('/api/browser_window/:id/set_maximum_size', setMaximumSize);
        this._server.post('/api/browser_window/:id/set_resizable', setResizable);
        this._server.post('/api/browser_window/:id/set_movable', setMovable);
        this._server.post('/api/browser_window/:id/set_minimizable', setMinimizable);
        this._server.post('/api/browser_window/:id/set_maximizable', setMaximizable);
        this._server.post('/api/browser_window/:id/set_full_screenable', setFullScreenable);
        this._server.post('/api/browser_window/:id/set_always_on_top', setAlwaysOnTop);
        this._server.post('/api/browser_window/:id/set_position', setPosition);
        this._server.post('/api/browser_window/:id/set_title', setTitle);
        this._server.post('/api/browser_window/:id/set_sheet_offset', setSheetOffset);
        this._server.post('/api/browser_window/:id/set_skip_taskbar', setSkipTaskbar);
        this._server.post('/api/browser_window/:id/set_kiosk', setKiosk);
        // server.post('/api/browser_window/:id/set_represented_filename', setRepresentedFilename);
        // server.post('/api/browser_window/:id/set_document_edited', setDocumentEdited);
        // server.post('/api/browser_window/:id/set_progress_bar', setProgressBar);
        // server.post('/api/browser_window/:id/set_overlay_icon', setOverlayIcon);
        // server.post('/api/browser_window/:id/set_has_shadow', setHasShadow);
        // server.post('/api/browser_window/:id/set_opacity', setOpacity);
        // server.get('/api/browser_window/:id/set_shape', setShape);
        // server.get('/api/browser_window/:id/set_thumbar_buttons', setThumbarButtons);
        // server.get('/api/browser_window/:id/set_thumbnail_clip', setThumbnailClip);
        // server.get('/api/browser_window/:id/set_thumbnail_tool_tip', setThumbnailToolTip);
        // server.get('/api/browser_window/:id/set_app_details', setAppDetails);
        // server.post('/api/browser_window/:id/set_icon', setIcon);
        // server.post('/api/browser_window/:id/set_window_button_visibility', setWindowButtonVisibility);
        // server.post('/api/browser_window/:id/set_auto_hide_menu_bar', setAutoHideMenuBar);
        // server.post('/api/browser_window/:id/set_menu_bar_visibility', setMenuBarVisibility);
        // server.post('/api/browser_window/:id/set_visible_on_all_workspaces', setVisibleOnAllWorkspaces);
        // server.post('/api/browser_window/:id/set_ignore_mouse_events', setIgnoreMouseEvents);
        // server.post('/api/browser_window/:id/set_content_protection', setContentProtection);
        // server.post('/api/browser_window/:id/set_focusable', setFocusable);
        // server.get('/api/browser_window/:id/set_focusable', setFocusable);
        // server.get('/api/browser_window/:id/set_parent_window', setParentWindow);
        // server.get('/api/browser_window/:id/set_auto_hide_cursor', setAutoHideCursor);
        // server.post('/api/browser_window/:id/set_vibrancy', setVibrancy);
        // server.post('/api/browser_window/:id/set_touch_bar', setTouchBar);
        // server.post('/api/browser_window/:id/set_browser_view', setBrowserView);
        // server.post('/api/browser_window/:id/set_top_browser_view', setTopBrowserView);
        // server.post('/api/browser_window/:id/set_title_bar_overlay', setTitleBarOverlay);
    }
    private dynamicIs(){
        this._server.get('/api/browser_window/:id/is_focused', isFocused);
        this._server.get('/api/browser_window/:id/is_destroyed', isDestroyed);
        this._server.get('/api/browser_window/:id/is_visible', isVisible);
        this._server.get('/api/browser_window/:id/is_modal', isModal);
        this._server.get('/api/browser_window/:id/is_maximized', isMaximized);
        this._server.get('/api/browser_window/:id/is_minimized', isMinimized);
        this._server.get('/api/browser_window/:id/is_full_screen', isFullScreen);
        this._server.get('/api/browser_window/:id/is_simple_full_screen', isSimpleFullScreen);
        this._server.get('/api/browser_window/:id/is_normal', isNormal);
        this._server.get('/api/browser_window/:id/is_enabled', isEnabled);
        this._server.get('/api/browser_window/:id/is_resizable', isResizable);
        this._server.get('/api/browser_window/:id/is_movable', isMovable);
        this._server.get('/api/browser_window/:id/is_minimizable', isMinimizable);
        this._server.get('/api/browser_window/:id/is_maximizable', isMaximizable);
        this._server.get('/api/browser_window/:id/is_full_screenable', isFullScreenable);
        this._server.get('/api/browser_window/:id/is_always_on_top', isAlwaysOnTop);
        this._server.get('/api/browser_window/:id/is_kiosk', isKiosk);
        // server.get('/api/browser_window/:id/is_tablet_mode', isTabletMode);
        // server.get('/api/browser_window/:id/is_window_message_hooked', isWindowMessageHooked);
        // server.get('/api/browser_window/:id/is_document_edited', isDocumentEdited);
        // server.get('/api/browser_window/:id/is_menu_bar_auto_hide', isMenuBarAutoHide);
        // server.get('/api/browser_window/:id/is_menu_bar_visible', isMenuBarVisible);
        // server.get('/api/browser_window/:id/is_visible_on_all_workspaces', isVisibleOnAllWorkspaces);
        // server.get('/api/browser_window/:id/has_shadow', hasShadow);
    }
    private dynamicGet(){
        this._server.get('/api/browser_window/:id/get_bounds', getBounds);
        this._server.get('/api/browser_window/:id/get_background_color', getBackgroundColor);
        this._server.get('/api/browser_window/:id/get_content_bounds', getContentBounds);
        this._server.get('/api/browser_window/:id/get_normal_bounds', getNormalBounds);
        this._server.get('/api/browser_window/:id/get_size', getSize);
        this._server.get('/api/browser_window/:id/get_content_size', getContentSize);
        this._server.get('/api/browser_window/:id/get_minimum_size', getMinimumSize);
        this._server.get('/api/browser_window/:id/get_maximum_size', getMaximumSize);
        this._server.get('/api/browser_window/:id/get_position', getPosition);
        this._server.get('/api/browser_window/:id/get_title', getTitle);
        // server.get('/api/browser_window/:id/get_media_source_id', getMediaSourceId);
        // server.get('/api/browser_window/:id/get_native_window_handle', getNativeWindowHandle);
        // server.get('/api/browser_window/:id/get_represented_filename', getRepresentedFilename);
        // server.get('/api/browser_window/:id/get_opacity', getOpacity);
        // server.get('/api/browser_window/:id/get_parent_window', getParentWindow);
        // server.get('/api/browser_window/:id/get_child_windows', getChildWindows);
        // server.post('/api/browser_window/:id/set_traffic_light_position', setTrafficLightPosition);
        // server.post('/api/browser_window/:id/get_traffic_light_position', getTrafficLightPosition);
        // server.post('/api/browser_window/:id/get_browser_view', getBrowserView);
        // server.post('/api/browser_window/:id/get_browser_views', getBrowserViews);
    }
}